# CUDA_VISIBLE_DEVICES=0,1 python create_heatmaps.py --config config_template.yaml
--- 

exp_arguments:
  # Number of classes 
  n_classes: 6
  # name tag for saving generated figures and assets
  save_exp_code: HEATMAP_OUTPUT
  # where to save raw asset files
  raw_save_dir: heatmaps/heatmap_raw_results
  # where to save final heatmaps
  production_save_dir: heatmaps/heatmap_production_results
  batch_size: 256

data_arguments:
  # where is data stored; can be a single str path or a dictionary of key, data_dir mapping
  data_dir: /media/data_disk/tiling_panda/train_images
  # column name for key in data_dir (if a dict mapping is used)
  data_dir_key: slide_id
  # csv list containing slide_ids (can additionally have seg/patch paramters, class labels in heatmaps/process_list/
  process_list: visual_heatmaps.csv
  # preset file for segmentation/patching
  preset: presets/bwh_biopsy.csv
  # extension of the slide files (e.g., .svs, .tiff)
  slide_ext: .tiff
  # label dictionary for str: integer mapping (optional)
  label_dict:
    0: Non Tumor
    1: Grade_1
    2: Grade_2
    3: Grade_3
    4: Grade_4
    5: Grade_5

patching_arguments:
  # Arguments for patching
  patch_size: 256
  overlap: 0.0
  patch_level: 0
  custom_downsample: 1

encoder_arguments:
  model_name: resnet50_trunc
  target_img_size: 224

model_arguments:
  # arguments for initializing model from checkpoint
  ckpt_path: /home/fausto/clam_panda/CLAM_panda/results/panda_isup_k10_seed42_s42/s_9_checkpoint.pt
  model_type: clam_sb
  initiate_fn: initiate_model
  model_size: small
  drop_out: 0.25
  embed_dim: 1024

heatmap_arguments:
  #downsample at which to visualize heatmap (-1 refers to downsample closest to 32x downsample)
  vis_level: 1
  #transparency for overlaying heatmap on background (0: background only, 1: foreground only)
  alpha: 0.4
  # whether to use a blank canvas instead of original slide
  blank_canvas: false
  # whether to also save the original H&E image
  save_orig: true
  # file extension for saving heatmap/original image
  save_ext: jpg
  # whether to calculate percentile scores in reference to the set of non-overlapping patches
  use_ref_scores: true
  # wheter to use gaussian blur for further smoothing
  blur: false
  # wheter to calulate heatmap with specified overlap
  calc_heatmap: true
  # Colormap per la heatmap
  cmap: jet
  use_center_shift: true
  use_roi: false
  custom_downsample: 1
  binarize: false
  # (Opzionale) binary threshold for heatmap
  binary_thresh: 0.5

sample_arguments:
  samples:
    - name: "topk_high_attention"
      sample: true
      seed: 1
      k: 15 # save top-k patches
      mode: topk